import { useState } from 'react';
import { Button } from "@/components/ui/button";
import { Card, CardContent } from "@/components/ui/card";
import { motion } from "framer-motion";

const questions = {
  Surface: [
    "What was your first impression of me?",
    "Whatâ€™s a little thing I do that makes you smile?",
    "If we had to describe our relationship in three words, what would they be?",
    "Whatâ€™s your favorite memory of us so far?",
    "Whatâ€™s your love language, and do you think I express it well?",
    "If we could teleport anywhere right now, where would we go?",
    "Whatâ€™s a song that reminds you of us?",
    "Whatâ€™s one thing you love about our virtual dates?",
    "Whatâ€™s a silly habit of mine that you find cute?",
    "If we were a movie couple, which one would we be?",
    "Whatâ€™s your idea of a perfect date night?",
    "Whatâ€™s the best compliment youâ€™ve ever received from me?",
    "Whatâ€™s one thing youâ€™ve learned about love from our relationship?",
    "What was your first thought when we met?",
    "If you could relive one of our moments, which one would it be?",
    "Whatâ€™s something we should do together more often?",
    "What do you think is my most attractive quality?",
    "Whatâ€™s one quirky thing you love about me?",
    "Whatâ€™s a fun tradition we should start?",
    "If we wrote a book about our love story, what would the title be?"
  ],
  Depth: [
    "When do you feel most loved by me?",
    "Whatâ€™s something I do that makes you feel safe?",
    "Whatâ€™s a fear you have about love?",
    "How do you think weâ€™ve grown as a couple since we met?",
    "Whatâ€™s something youâ€™ve never told me but always wanted to?",
    "What does love mean to you?",
    "Whatâ€™s a past experience that shaped the way you love today?",
    "If you could relive one moment with me, what would it be?",
    "What do you think is our biggest strength as a couple?",
    "How do you know I truly care about you?",
    "Whatâ€™s a challenge weâ€™ve overcome together?",
    "How do you think we can support each other better?",
    "Whatâ€™s an insecurity you have in relationships?",
    "Whatâ€™s a way I can make you feel more appreciated?",
    "Whatâ€™s the best way I can comfort you when youâ€™re upset?",
    "Whatâ€™s a lesson love has taught you?",
    "What do you think makes a relationship last?",
    "Whatâ€™s one of your favorite things about our communication?",
    "Whatâ€™s something youâ€™re grateful for in our relationship?",
    "How can we keep our relationship exciting and fresh?"
  ],
  Soul: [
    "Whatâ€™s a fear you have about our relationship, and why?",
    "Whatâ€™s something you admire about me that I might not realize?",
    "How have I changed your perspective on love?",
    "Whatâ€™s something you struggle with in relationships?",
    "Whatâ€™s one thing I do that makes you feel truly seen?",
    "If today was our last day together, what would you want me to know?",
    "Whatâ€™s a wound from your past that still affects you?",
    "How do you think we handle conflicts, and what could we do better?",
    "Whatâ€™s the hardest thing about being in a long-distance relationship?",
    "How can we stay emotionally connected despite the distance?",
    "Whatâ€™s a moment in our relationship that made you feel deeply connected?",
    "Whatâ€™s an emotional barrier you still struggle with?",
    "Whatâ€™s a deep personal truth you havenâ€™t shared with me yet?",
    "Whatâ€™s something about love that scares you?",
    "Whatâ€™s a part of yourself youâ€™re still working on?",
    "How do you see our future together?",
    "Whatâ€™s the most meaningful thing Iâ€™ve ever said to you?",
    "If you could ask me anything without fear, what would it be?",
    "Whatâ€™s a dream you have for us as a couple?"
  ]
};

export default function Game() {
  const [currentLevel, setCurrentLevel] = useState("Surface");
  const [currentQuestion, setCurrentQuestion] = useState(null);
  const [history, setHistory] = useState([]);

  const getNewQuestion = () => {
    const randomIndex = Math.floor(Math.random() * questions[currentLevel].length);
    const newQuestion = questions[currentLevel][randomIndex];
    setCurrentQuestion(newQuestion);
    setHistory([...history, newQuestion]);
  };

  return (
    <div className="flex flex-col items-center justify-center min-h-screen p-4 bg-gradient-to-r from-pink-300 to-purple-400">
      <motion.div
        className="text-center mb-4"
        initial={{ opacity: 0, y: -20 }}
        animate={{ opacity: 1, y: 0 }}
      >
        <h1 className="text-4xl font-bold text-white">A&A Diving Deeper ðŸ’–</h1>
        <p className="text-white mt-2">created with love from AV</p>
      </motion.div>
      <div className="flex gap-2 mb-4">
        <Button onClick={() => setCurrentLevel("Surface")} className={`px-4 py-2 rounded-lg ${currentLevel === "Surface" ? "bg-red-500 text-white" : "bg-white text-red-500"}`}>Surface</Button>
        <Button onClick={() => setCurrentLevel("Depth")} className={`px-4 py-2 rounded-lg ${currentLevel === "Depth" ? "bg-red-500 text-white" : "bg-white text-red-500"}`}>Depth</Button>
        <Button onClick={() => setCurrentLevel("Soul")} className={`px-4 py-2 rounded-lg ${currentLevel === "Soul" ? "bg-red-500 text-white" : "bg-white text-red-500"}`}>Soul</Button>
      </div>
      <Card className="p-6 bg-white shadow-lg rounded-2xl text-center max-w-lg">
        <CardContent>
          {currentQuestion ? (
            <motion.p
              key={currentQuestion}
              className="text-lg font-medium text-gray-800"
              initial={{ opacity: 0 }}
              animate={{ opacity: 1 }}
            >
              {currentQuestion}
            </motion.p>
          ) : (
            <p className="text-lg text-gray-500">Press start to get your first question!</p>
          )}
        </CardContent>
      </Card>
      <Button onClick={getNewQuestion} className="mt-4 px-6 py-2 text-lg bg-red-500 text-white rounded-full shadow-lg">
        {currentQuestion ? "Next Question" : "Start Game"}
      </Button>
    </div>
  );
}
